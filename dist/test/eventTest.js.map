{"version":3,"sources":["../../server/test/eventTest.js"],"names":["should","use","describe","it","done","request","get","end","err","res","have","status","body","property","result","be","a","with","lengthOf","error","eql","event","id","eventType","eventLocation","state","date","post","send","message","eventId","put","delete"],"mappings":"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","file":"eventTest.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from './../server';\r\n\r\n/* eslint-disable no-unused-vars */\r\nconst should = chai.should();\r\n\r\nchai.use(chaiHttp);\r\n\r\n// Test for /Get route\r\ndescribe('/GET events', () => {\r\n  // test for Get all Events\r\n  it('it should GET all the events', (done) => {\r\n    chai.request(app)\r\n      .get('/api/events')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.have.property('result');\r\n        res.body.result.should.be.a('array').with.lengthOf(3);\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// Test the Post routes\r\ndescribe('/POST an event', () => {\r\n  // Test for post with an existing Id\r\n  it('it should not POST an event with an existing id field', (done) => {\r\n    const event = {\r\n      id: '2',\r\n      eventType: 'Wedding',\r\n      eventLocation: 'Oriental',\r\n      state: 'Lagos',\r\n      date: '12/12/2018'\r\n    };\r\n\r\n    chai.request(app)\r\n      .post('/api/events')\r\n      .send(event)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('event id already existing');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test for post with no Id\r\n  it('it should not POST an event without an id field', (done) => {\r\n    const event = {\r\n      eventType: 'Wedding',\r\n      eventLocation: 'Oriental',\r\n      state: 'Lagos',\r\n      date: '12/12/2018'\r\n    };\r\n\r\n    chai.request(app)\r\n      .post('/api/events')\r\n      .send(event)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('event id is required');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // Test for post with to add a new event.\r\n  it('it should Add(post) a new event', (done) => {\r\n    const event = {\r\n      id: '4',\r\n      eventType: 'Wedding',\r\n      eventLocation: 'Oriental',\r\n      state: 'Lagos',\r\n      date: '12/12/2018'\r\n    };\r\n\r\n    chai.request(app)\r\n      .post('/api/events')\r\n      .send(event)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// TEst for Get an EVent\r\ndescribe('/Get an event', () => {\r\n  // Test for post with an existing Id\r\n  it('it should get an event', (done) => {\r\n    const id = 2;\r\n    chai.request(app)\r\n      .get(`/api/events/${id}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('result');\r\n        res.body.result.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // GET an event\r\n  it('it should not get an event', (done) => {\r\n    const id = 4;\r\n    chai.request(app)\r\n      .get(`/api/events/${id}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('not found');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// Test for update an event\r\ndescribe('/Update an event', () => {\r\n  // PUT an event\r\n  it('it should update the event', (done) => {\r\n    const eventId = 2;\r\n    chai.request(app)\r\n      .put(`/api/events/${eventId}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Update Successful');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // PUT an event\r\n  it('it should get an not update the event', (done) => {\r\n    const eventId = 4;\r\n    chai.request(app)\r\n      .get(`/api/events/${eventId}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('not found');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// delete an event\r\ndescribe('/Delete an event', () => {\r\n  // DELETE an event\r\n  it('it should delete an event', (done) => {\r\n    const id = 2;\r\n    chai.request(app)\r\n      .delete(`/api/events/${id}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('Success');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(false);\r\n        done();\r\n      });\r\n  });\r\n\r\n  // DELETE an event\r\n  it('it should get an not delete the event', (done) => {\r\n    const id = 4;\r\n    chai.request(app)\r\n      .delete(`/api/events/${id}`)\r\n      .end((err, res) => {\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.message.should.eql('not found');\r\n        res.body.should.have.property('error');\r\n        res.body.error.should.eql(true);\r\n        done();\r\n      });\r\n  });\r\n});\r\n"]}